// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/WildEgor/gNotifier/internal/adapters"
	"github.com/WildEgor/gNotifier/internal/configs"
	handlers2 "github.com/WildEgor/gNotifier/internal/handlers/amqp"
	"github.com/WildEgor/gNotifier/internal/handlers/http"
	"github.com/WildEgor/gNotifier/internal/repository/mongo"
	"github.com/WildEgor/gNotifier/internal/routers"
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
)

// Injectors from server.go:

func NewServer() (*fiber.App, error) {
	configurator := configs.NewConfigurator()
	appConfig := configs.NewAppConfig(configurator)
	healthCheckAdapter, err := adapters.NewHealthCheckAdapter()
	if err != nil {
		return nil, err
	}
	mongoConfig := configs.NewMongoConfig(configurator)
	client, err := mongo.NewMongoClient(mongoConfig)
	if err != nil {
		return nil, err
	}
	database := mongo.NewMongoDatabase(client)
	tokensRepository, err := mongo.NewTokensRepository(database)
	if err != nil {
		return nil, err
	}
	storeTokenHandler := handlers.NewStoreTokenHandler(tokensRepository)
	unsubTokenHandler := handlers.NewUnsubTokenHandler(tokensRepository)
	httpRouter := routers.NewHTTPRouter(healthCheckAdapter, storeTokenHandler, unsubTokenHandler)
	smtpConfig := configs.NewSMTPConfig(configurator)
	smtpAdapter := adapters.NewSMTPAdapter(smtpConfig)
	smsConfig := configs.NewSMSConfig(configurator)
	smsAdapter := adapters.NewSMSAdapter(smsConfig)
	fcmConfig := configs.NewFCMConfig(configurator)
	fcmAdapter := adapters.NewFCMAdapter(fcmConfig)
	apnConfig := configs.NewAPNConfig(configurator)
	apnAdapter := adapters.NewAPNAdapter(apnConfig)
	notifierHandler := handlers2.NewNotifierHandler(smtpAdapter, smsAdapter, fcmAdapter, apnAdapter)
	amqpConfig := configs.NewAMQPConfig(configurator)
	amqpRouter := routers.NewAMQPRouter(notifierHandler, amqpConfig, healthCheckAdapter)
	app := NewApp(appConfig, httpRouter, amqpRouter)
	return app, nil
}

// server.go:

var ServerSet = wire.NewSet(AppSet)
